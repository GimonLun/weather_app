// Mocks generated by Mockito 5.0.17 from annotations
// in weather_app/test/mocks/repositories/mock_repository.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_app/data/models/weathers/api/response/weather_details_response.dart'
    as _i2;
import 'package:weather_app/repositories/open_weather_rest_client.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeWeatherDetailsResponse_0 extends _i1.Fake
    implements _i2.WeatherDetailsResponse {}

/// A class which mocks [OpenWeatherRestClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenWeatherRestClient extends _i1.Mock
    implements _i3.OpenWeatherRestClient {
  MockOpenWeatherRestClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.WeatherDetailsResponse> getWeatherByCoordinates(
          double? lon, double? lat,
          {String? appid = r'ad03cb447ee4689f565d1faa4263a66d',
          String? lang = r'en_GB',
          String? units = r'metric',
          String? exclude = r'minutely,alerts'}) =>
      (super.noSuchMethod(
              Invocation.method(#getWeatherByCoordinates, [
                lon,
                lat
              ], {
                #appid: appid,
                #lang: lang,
                #units: units,
                #exclude: exclude
              }),
              returnValue: Future<_i2.WeatherDetailsResponse>.value(
                  _FakeWeatherDetailsResponse_0()))
          as _i4.Future<_i2.WeatherDetailsResponse>);
}
